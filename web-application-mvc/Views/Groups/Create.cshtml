@model Core.Group

<h2 class="red">Добавить</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Университет", htmlAttributes: new { @class = "light-blue control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.University, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.University, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Факультет", htmlAttributes: new { @class = "light-blue control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Группа", htmlAttributes: new { @class = "light-blue control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Начало практики", htmlAttributes: new { @class = "light-blue control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Start, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.Start, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Окончание практики", htmlAttributes: new { @class = "light-blue control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.End, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.End, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (ViewBag.Students != null)
        {
            <div class="form-group">
                @Html.Label("Студенты", htmlAttributes: new { @class = "light-blue control-label col-md-2" })
                <div class="col-md-10">
                    @foreach (Core.User item in ViewBag.Students)
                    {
                        <div>
                            <input id="@item.ID" type="checkbox" name="students" value="@item.ID" />
                            <label for="@item.ID">
                                @Html.ActionLink(item.Surname + " " + item.Name, "Details", "Users", new { id = item.ID }, new { })
                            </label>
                        </div>
                    }
                </div>
            </div>
        }
        @if (ViewBag.Sections != null)
        {
            <div class="form-group">
                @Html.Label("Доступ к разделам", htmlAttributes: new { @class = "light-blue control-label col-md-2" })
                <div class="col-md-10">
                    @foreach (Core.Section item in ViewBag.Sections)
                    {
                        <div>
                            <input id="@item.ID" type="checkbox" name="sections" value="@item.ID" />
                            <label for="@item.ID">
                                @Html.ActionLink(item.Description, "Details", "Sections", new { id = item.ID }, new { })
                            </label>
                        </div>
                    }
                </div>
            </div>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Добавить" class="btn btn-default" />
                @Html.ActionLink("Список групп", "Index")
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <link href='@Url.Content("~/Content/themes/base/all.css")' rel="stylesheet" type="text/css" />
    <script src='@Url.Content("~/Scripts/jquery-ui-1.11.4.min.js")' type="text/javascript"></script>
    <script type="text/javascript">
        $(function () {
            $("input[type='date']")
                .datepicker({ dateFormat: 'dd/mm/yy' })
                .get(0).setAttribute("type", "text");
            $.datepicker.regional['ru'] = {
                prevText: 'Пред',
                nextText: 'След',
                monthNames: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь',
                    'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
                monthNamesShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн',
                    'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],
                dayNames: ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота'],
                dayNamesShort: ['вск', 'пнд', 'втр', 'срд', 'чтв', 'птн', 'сбт'],
                dayNamesMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],
                weekHeader: 'Не',
                dateFormat: 'dd/mm/yy',
                firstDay: 1,
                isRTL: false,
                showMonthAfterYear: false,
                yearSuffix: ''
            };
            $.datepicker.setDefaults($.datepicker.regional['ru']);
            $.validator.addMethod('date',
                function (value, element) {
                    var ok = true;
                    try {
                        $.datepicker.parseDate('dd/mm/yy', value);
                    }
                    catch (err) {
                        ok = false;
                    }
                    return ok;
                });
        });
    </script>
}