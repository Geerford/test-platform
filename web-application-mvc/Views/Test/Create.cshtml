@model web_application_mvc.Models.TestModel

<link rel="stylesheet" type="text/css" href="~/Content/test.css">
<script defer type="text/javascript" src="~/Scripts/test.js"></script>

@Html.Label("Название", htmlAttributes: new { @class = "light-blue control-label col-md-2" })
<div class="col-md-10">
    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control test-title" } })
</div>
@Html.Label("Описание", htmlAttributes: new { @class = "light-blue control-label col-md-2" })
<div class="col-md-10">
    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control test-description" } })
</div>
@Html.Label("Раздел", htmlAttributes: new { @class = "light-blue control-label col-md-2" })
<div class="col-md-10">
    @Html.DropDownList("SectionID", null, htmlAttributes: new { @class = "form-control test-section" })
</div>
@Html.Label("Вопросы", htmlAttributes: new { @class = "red quest-header control-label col-md-12" })

<form name="test" class="test" action="#">
    <div class="question">
        <p>Описание</p>
        <textarea class="description"></textarea>
        <p>Тип</p>
        <select name="types" onchange="toggleDisplay.call(this)">
            <option disabled selected>Выберите тип</option>
            <option value="enter">Ввод ответа</option>
            <option value="choose">Выбор ответа</option>
        </select>
        <div hidden class="choose-answer">
            <div class="variant">
                <input type="text">
                <input type="checkbox" name="is-correct" value="false">
            </div>
            <div class="variant">
                <input type="text">
                <input type="checkbox" name="is-correct" value="false">
            </div>
            <span class="red btn-add-answer href" onclick="addVariant.call(this)">Добавить вариант</span>
        </div>
        <div hidden class="enter-answer">
            <input type="text">
        </div>
    </div>
    <span class="red btn-add-quest href" onclick="addQuestion.call(this);">Добавить вопрос</span>
</form>
<button type="button" id="SaveTest" class="btn btn-default"><span class="glyphicon glyphicon-ok"></span> Сохранить </button>

@section MyScritps
{
    <script type="text/javascript">
        $(document).ready(function () {
            $('#SaveTest').on('click', function () {
                let questionsTitle = document.getElementsByClassName('question');
                let result = [];

                for (let i = 0; i < questionsTitle.length; i++) {
                    let typeSelect = document.getElementsByName('types')[i];
                    let selectedOption = typeSelect.options[typeSelect.selectedIndex].value;
                    let question = {};
                    let answers = [];
                    let answer;
                    if (selectedOption === "enter") {
                        answer = {
                            Answer: questionsTitle[i].lastElementChild.firstElementChild.value,
                            IsCorrect: true
                        }
                        answers.push(answer);
                    }
                    else {
                        if (i === 0) {
                            answer = {
                                Answer: questionsTitle[i].children[4]
                            }
                        }
                        else {
                            answer = {
                                Answer: questionsTitle[i].children[5]
                            }
                        }
                        let variant = answer.Answer.children;
                        for (let i = 0; i < variant.length - 1; i++) {
                            if (variant[i] !== variant.lastElementChild) {
                                let variantValue = variant[i].firstElementChild;
                                let isCorrect = variant[i].children[1].checked;

                                let answer = {
                                    Answer: variantValue.value,
                                    IsCorrect: isCorrect
                                }
                                answers.push(answer);
                            }
                        }
                    }
                    question = {
                        Description: document.getElementsByClassName('description')[i].value,
                        Answers: answers,
                        Type: selectedOption
                    };
                    result.push(question);
                }
                let test = {
                    Questions: result,
                    Description: document.getElementById('Description').value,
                    Section: document.getElementById('SectionID').value,
                    Title: document.getElementById('Title').value
                };

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Create", "Test")',
                    data: { test },
                    success: function (response) {
                        console.log("Success");
                        window.location = "@Url.Action("Index", "Tests")";
                    },
                    error: function (response) {
                        console.log("Error");
                    }
                });
                console.log(test);
            });
        });
    </script>
}